#include <U8g2lib.h>
#include <Wire.h>

#define OLED_SDA 4
#define OLED_SCL 15
#define OLED_RST 16
#define SCREEN_WIDTH 128 //display width, in pixels
#define SCREEN_HEIGHT 64 //display height, in pixels
U8G2_SSD1306_128X64_NONAME_F_HW_I2C *u8g2 = nullptr;
#define I2C_SDA                     4
#define I2C_SCL                     15
#define OLED_RST                    16
#define TFT_BL   32            // LED back-light control pin


char CurMenu[256];


#define bat_width  8
#define bat_height 11

static unsigned char image_bati[] = {
 0xff,0xe7,0x81,0xbd,0xbd,0xbd,0x81,0x81,0x81,0x81,0x81};

static unsigned char image_batt[] = {
 0x00,0x18,0x7e,0x42,0x42,0x42,0x7e,0x7e,0x7e,0x7e,0x7e};

static unsigned char image_temp[] = {
 0x08,0x3c,0x14,0x34,0x14,0x34,0x14,0x3e,0x2e,0x3e,0x1c};

static unsigned char image_tempi[] = {
 0xf7,0xc3,0xeb,0xcb,0xeb,0xcb,0xeb,0xc1,0xd1,0xc1,0xe3};

static unsigned char logo_bits[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xF0, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 
  0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x1F, 0x00, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 
  0xC0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x1F, 0x00, 0x00, 
  0x00, 0x00, 0x06, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 
  0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x07, 0x38, 0x00, 0x00, 
  0x00, 0x00, 0xC0, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE7, 
  0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 
  0xC0, 0x7F, 0x20, 0x08, 0x30, 0x1C, 0x08, 0x00, 0xC0, 0xFF, 0x70, 0x1C, 
  0x78, 0x1E, 0x1C, 0x00, 0xC0, 0xE3, 0x70, 0x3C, 0x78, 0x1E, 0xFC, 0x00, 
  0xE0, 0xE1, 0x70, 0x7C, 0x38, 0x3E, 0xFC, 0x01, 0xE0, 0xF8, 0x78, 0x7C, 
  0x38, 0x3E, 0xFC, 0x01, 0xE0, 0xFE, 0x38, 0x7C, 0x38, 0x3F, 0xDC, 0x01, 
  0xE0, 0x3F, 0x38, 0xFC, 0x3C, 0x3F, 0xDC, 0x01, 0xE0, 0x7E, 0x38, 0xFE, 
  0x1C, 0x3F, 0xDC, 0x01, 0xF0, 0xF0, 0x38, 0xEE, 0x9C, 0x3F, 0xFC, 0x01, 
  0xF0, 0xE0, 0x38, 0xEE, 0x9D, 0x3B, 0xFC, 0x01, 0x70, 0xE0, 0x38, 0xCE, 
  0x9D, 0x7B, 0xFC, 0x00, 0x70, 0xE0, 0x38, 0xCE, 0x9F, 0x73, 0xFC, 0x00, 
  0xF0, 0xE3, 0x3C, 0xCE, 0x8F, 0x7F, 0xFC, 0x01, 0xF0, 0xE7, 0x1C, 0x8E, 
  0x8F, 0x7F, 0xDC, 0x03, 0xF8, 0xFF, 0x1C, 0x8E, 0x8F, 0x7F, 0xDC, 0x07, 
  0xF8, 0xFF, 0x1C, 0x8F, 0xCF, 0xF3, 0x9C, 0x07, 0xF8, 0xFF, 0x1C, 0x0F, 
  0xCF, 0xE3, 0x1C, 0x0F, 0x00, 0x00, 0x18, 0x07, 0xCF, 0xE1, 0x1C, 0x1E, 
  0x00, 0x00, 0x00, 0x06, 0x8E, 0xE1, 0x1C, 0x1C, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xC0, 0x1C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x38, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x07, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 
  0x38, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x38, 0x00, 0xE7, 0x03, 
  0xF0, 0x01, 0x1E, 0x00, 0x38, 0x00, 0xF7, 0x07, 0xF8, 0x03, 0x1E, 0x00, 
  0x38, 0x00, 0xFF, 0x0F, 0xF8, 0x07, 0x1E, 0x00, 0x38, 0x00, 0x77, 0x0E, 
  0x38, 0x0F, 0x1E, 0x00, 0x3C, 0x00, 0x07, 0x1E, 0x38, 0x0E, 0x1E, 0x00, 
  0x1C, 0x00, 0x07, 0x1C, 0x38, 0x0E, 0x1E, 0x00, 0x1C, 0x00, 0x07, 0x1C, 
  0x38, 0x0E, 0x3E, 0x00, 0x1C, 0x00, 0x07, 0x3C, 0x38, 0x0E, 0x3E, 0x00, 
  0x1C, 0x00, 0x07, 0x38, 0x38, 0x0E, 0x3E, 0x00, 0x1C, 0x00, 0x07, 0x78, 
  0x38, 0x0F, 0x3E, 0x00, 0x1C, 0x00, 0x07, 0x70, 0xF8, 0x0F, 0x7E, 0x00, 
  0x1C, 0x00, 0x07, 0x70, 0xF8, 0x07, 0x7E, 0x00, 0x1C, 0x00, 0x07, 0x70, 
  0xF8, 0x03, 0x7E, 0x00, 0x1C, 0x00, 0x07, 0x70, 0xF8, 0x00, 0x7E, 0x00, 
  0x1C, 0x00, 0x07, 0x70, 0xF8, 0x01, 0xFF, 0x00, 0x1C, 0x00, 0x07, 0x70, 
  0xFC, 0x01, 0xE7, 0x00, 0x1C, 0x00, 0x07, 0x70, 0xDC, 0x03, 0xE7, 0x00, 
  0x1C, 0x00, 0x07, 0x70, 0x9C, 0x03, 0xE7, 0x00, 0x1C, 0x00, 0x07, 0x70, 
  0x9C, 0x03, 0xE7, 0x00, 0x1C, 0x00, 0x07, 0x70, 0x9C, 0x03, 0xE7, 0x00, 
  0x1C, 0x00, 0x07, 0x70, 0x9C, 0x03, 0xE7, 0x01, 0x1E, 0x00, 0x07, 0x70, 
  0x9C, 0x07, 0xC7, 0x01, 0x0E, 0x00, 0x0F, 0x70, 0x1C, 0x07, 0xC7, 0x01, 
  0x0E, 0x00, 0x0E, 0x70, 0x1C, 0x07, 0xC7, 0x01, 0x0E, 0x00, 0x0E, 0x70, 
  0x1C, 0x07, 0xFF, 0x03, 0x0E, 0x00, 0x0E, 0x70, 0x1C, 0x0F, 0xFF, 0x03, 
  0x0E, 0x00, 0x0E, 0x78, 0x1C, 0x8E, 0xFF, 0x03, 0x0E, 0x00, 0x0E, 0x38, 
  0x1C, 0x8E, 0x8F, 0x03, 0x0E, 0x00, 0x1E, 0x3C, 0x1C, 0x8E, 0x83, 0x07, 
  0x0E, 0x00, 0x1C, 0x1E, 0x1C, 0x8E, 0x03, 0x07, 0x0E, 0x00, 0x1C, 0x0F, 
  0x1C, 0x9E, 0x03, 0x07, 0x0E, 0x00, 0xBC, 0x0F, 0x1C, 0x9C, 0x03, 0x06, 
  0x0E, 0x00, 0xF8, 0x07, 0x1C, 0x9C, 0x03, 0x00, 0xFE, 0x1F, 0xF8, 0x03, 
  0x18, 0xBC, 0x03, 0x00, 0xFE, 0x3F, 0xF0, 0x01, 0x00, 0xB8, 0x03, 0x00, 
  0xFC, 0x3F, 0x00, 0x00, 0x00, 0xB0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00 };


static const uint8_t image_data_Image[] = {

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x7E, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x80, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 
  0x0F, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xF0, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x30, 0x38, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x3F, 0x00, 0x00, 0x00, 
  0x00, 0x30, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF4, 
  0x4F, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xE0, 0x8F, 0x00, 0x00, 0x00, 0x00, 0x18, 0x30, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x1F, 0x00, 0x00, 0x00, 
  0x00, 0x18, 0x18, 0x08, 0x78, 0xE0, 0x01, 0x1C, 0x00, 0x00, 0x00, 0xF0, 
  0x1F, 0x00, 0x00, 0x00, 0x00, 0x18, 0x06, 0x86, 0xC3, 0x18, 0xC3, 0x01, 
  0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x03, 0x86, 
  0xC1, 0x08, 0xC3, 0x00, 0x80, 0x3F, 0x00, 0x80, 0x1F, 0x00, 0x00, 0x00, 
  0x00, 0x0C, 0x0E, 0x86, 0xC1, 0x00, 0xC3, 0x00, 0x40, 0xFF, 0x01, 0xF0, 
  0x1F, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x82, 0x40, 0x80, 0x41, 0x00, 
  0x00, 0xB2, 0x0F, 0xFC, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x06, 0x18, 0xC3, 
  0x60, 0x80, 0x61, 0x00, 0x00, 0x00, 0xBC, 0xFF, 0x7F, 0x00, 0x00, 0x00, 
  0x00, 0x06, 0x0C, 0xC3, 0x60, 0x86, 0x61, 0x00, 0x00, 0x18, 0xF0, 0xFF, 
  0xFF, 0x01, 0x00, 0x00, 0x00, 0x06, 0x0C, 0x41, 0x20, 0x83, 0x20, 0x00, 
  0x00, 0x00, 0x00, 0xFC, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x03, 0x86, 0x61, 
  0x30, 0xC1, 0x30, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x0F, 0x00, 0x00, 
  0x00, 0x03, 0x83, 0x61, 0x30, 0xE3, 0x30, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0xFF, 0x0F, 0x00, 0x00, 0x80, 0xFF, 0xC0, 0x71, 0x3C, 0xFF, 0x78, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0xFF, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x80, 
  0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xF8, 0x8F, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7A, 0xF8, 0xFF, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3A, 0x80, 
  0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x44, 0x00, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x60, 0x00, 0x00, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xFE, 0x0F, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0x1F, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0xF0, 0x1F, 0x00, 0x00, 
  0x00, 0x07, 0x00, 0x80, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 
  0x30, 0x38, 0x00, 0x00, 0x00, 0x0F, 0x06, 0x80, 0xFF, 0x3F, 0x00, 0x00, 
  0x00, 0x30, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xCF, 
  0xFF, 0x3F, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 
  0xF8, 0xFF, 0xFF, 0xC7, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 
  0x18, 0x38, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xCF, 0xFF, 0xFF, 0x00, 0x00, 
  0x00, 0x18, 0x00, 0x1E, 0x18, 0x18, 0x78, 0x00, 0xFE, 0xFF, 0xFF, 0xEF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x18, 0x00, 0x21, 0x18, 0x0E, 0xC6, 0x00, 
  0xFE, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x0C, 0x80, 0x60, 
  0xFC, 0x03, 0xC2, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 
  0x00, 0x0C, 0x40, 0x60, 0x0C, 0x01, 0xC0, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x0E, 0x60, 0x60, 0x0C, 0x03, 0x60, 0x80, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x06, 0x20, 0x60, 
  0x06, 0x03, 0x60, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x01, 0x00, 
  0x00, 0x06, 0x20, 0x20, 0x06, 0x83, 0x61, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x7F, 0x02, 0x00, 0x00, 0x07, 0x30, 0x30, 0x06, 0xC3, 0x20, 0x80, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x03, 0x20, 0x18, 
  0x03, 0x43, 0x30, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 
  0x00, 0x03, 0x66, 0x0C, 0x03, 0xC3, 0x38, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x7F, 0x00, 0x00, 0x80, 0xFF, 0xC3, 0x83, 0x03, 0xC3, 0x3F, 0x80, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0x0F, 0xFF, 0x3F, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 
  0x03, 0xD8, 0x0F, 0x00
};



static const uint8_t image_data_Image_Heat[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0x00, 0x00, 
    0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 
    0x00, 0x00, 0x1f, 0xfc, 0x3f, 0xf8, 0x00, 0x00, 
    0x00, 0x00, 0x7f, 0xf8, 0x0f, 0xfe, 0x00, 0x00, 
    0x00, 0x00, 0xff, 0xe0, 0x07, 0xff, 0x00, 0x00, 
    0x00, 0x03, 0xff, 0x80, 0x01, 0xff, 0xc0, 0x00, 
    0x00, 0x0f, 0xfe, 0x00, 0x00, 0x7f, 0xf0, 0x00, 
    0x00, 0x3f, 0xf8, 0x00, 0x00, 0x1f, 0xfc, 0x00, 
    0x00, 0xff, 0xe0, 0x00, 0x00, 0x07, 0xff, 0x00, 
    0x03, 0xff, 0xc0, 0x00, 0x00, 0x03, 0xff, 0x80, 
    0x03, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe0, 
    0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 
    0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 
    0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x08, 0x00, 0x60, 0x03, 0x00, 0x00, 
    0x00, 0x00, 0x1c, 0x00, 0xe0, 0x03, 0x80, 0x00, 
    0x00, 0x00, 0x3e, 0x01, 0xf0, 0x07, 0x80, 0x00, 
    0x00, 0x00, 0x7e, 0x01, 0xf0, 0x0f, 0xc0, 0x00, 
    0x00, 0x00, 0x3e, 0x01, 0xf8, 0x0f, 0xc0, 0x00, 
    0x00, 0x00, 0x3f, 0x01, 0xf8, 0x07, 0xc0, 0x00, 
    0x00, 0x00, 0x3f, 0x00, 0xf8, 0x07, 0xc0, 0x00, 
    0x00, 0x00, 0x3e, 0x00, 0xf8, 0x07, 0xc0, 0x00, 
    0x00, 0x00, 0x3f, 0x01, 0xf8, 0x07, 0xc0, 0x00, 
    0x00, 0x00, 0x7e, 0x01, 0xf0, 0x0f, 0xc0, 0x00, 
    0x00, 0x00, 0x7e, 0x03, 0xf0, 0x1f, 0xc0, 0x00, 
    0x00, 0x00, 0xfc, 0x07, 0xf0, 0x1f, 0x80, 0x00, 
    0x00, 0x01, 0xfc, 0x07, 0xe0, 0x3f, 0x80, 0x00, 
    0x00, 0x01, 0xf8, 0x0f, 0xc0, 0x7f, 0x00, 0x00, 
    0x00, 0x03, 0xf0, 0x0f, 0xc0, 0x7e, 0x00, 0x00, 
    0x00, 0x03, 0xf0, 0x1f, 0x80, 0x7c, 0x00, 0x00, 
    0x00, 0x03, 0xe0, 0x1f, 0x00, 0xfc, 0x00, 0x00, 
    0x00, 0x03, 0xe0, 0x1f, 0x00, 0xfc, 0x00, 0x00, 
    0x00, 0x03, 0xe0, 0x1f, 0x00, 0x78, 0x00, 0x00, 
    0x00, 0x03, 0xe0, 0x1f, 0x80, 0xfc, 0x00, 0x00, 
    0x00, 0x03, 0xf0, 0x1f, 0x80, 0x7e, 0x00, 0x00, 
    0x00, 0x03, 0xf0, 0x0f, 0x80, 0x7e, 0x00, 0x00, 
    0x00, 0x01, 0xe0, 0x0f, 0x00, 0x7c, 0x00, 0x00, 
    0x00, 0x01, 0xc0, 0x07, 0x00, 0x38, 0x00, 0x00, 
    0x00, 0x00, 0x80, 0x02, 0x00, 0x10, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x07, 0xfb, 0xff, 0xfb, 0xff, 0xed, 0xb7, 0x40, 
    0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
    0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
    0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
    0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
    0x02, 0xaa, 0xaa, 0xaa, 0xaa, 0xad, 0xdb, 0x60, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const uint8_t image_data_NotHeat[512] = {
    
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0x00, 0x00, 
    0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 
    0x00, 0x00, 0x1f, 0xfc, 0x3f, 0xf8, 0x00, 0x00, 
    0x00, 0x00, 0x7f, 0xf8, 0x0f, 0xfe, 0x00, 0x00, 
    0x00, 0x00, 0xff, 0xe0, 0x07, 0xff, 0x00, 0x00, 
    0x00, 0x03, 0xff, 0x80, 0x01, 0xff, 0xc0, 0x00, 
    0x00, 0x0f, 0xfe, 0x00, 0x00, 0x7f, 0xf0, 0x00, 
    0x00, 0x3f, 0xf8, 0x00, 0x00, 0x1f, 0xfc, 0x00, 
    0x00, 0xff, 0xe0, 0x00, 0x00, 0x07, 0xff, 0x00, 
    0x03, 0xff, 0xc0, 0x00, 0x00, 0x03, 0xff, 0x80, 
    0x03, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe0, 
    0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 
    0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 
    0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x07, 0xff, 0xff, 0xde, 0xee, 0xdb, 0xbb, 0xa0, 
    0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
    0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
    0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
    0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
    0x02, 0xaa, 0xaa, 0xab, 0x6d, 0xbb, 0x6d, 0xa0, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

String intToString(int num)
{
    String convert = String(num);
    //itoa(num,cstr,10);
    
    return convert;

}

void init_oled()
{
  //reset display via software

  Wire.begin(I2C_SDA, I2C_SCL);

  pinMode(OLED_RST, OUTPUT);
  digitalWrite(OLED_RST, HIGH); delay(20);
  digitalWrite(OLED_RST, LOW);  delay(20);
  digitalWrite(OLED_RST, HIGH); delay(20);

  /*pinMode(TFT_BL,OUTPUT);
  ledcSetup(0, 5000, 8);
  ledcAttachPin(TFT_BL, 0);
  ledcWrite(0, 1);
*/

  Wire.beginTransmission(0x3C);
  if (Wire.endTransmission() == 0) {
    //Serial.println("Started OLED");
    u8g2 = new U8G2_SSD1306_128X64_NONAME_F_HW_I2C(U8G2_R2, U8X8_PIN_NONE);
    u8g2->begin();
    
    u8g2->clearBuffer();
    u8g2->setFlipMode(0);
    u8g2->setFontMode(1); // Transparent
    
    u8g2->firstPage();
    
    
    

    u8g2->clearBuffer();
    //u8g2->setDisplayRotation(U8G2_R1);
    
    
    u8g2->drawBox(0, 0, 128, 64);
    u8g2->setDrawColor(1);
    u8g2->drawXBMP( 0, 0, 128, 64, image_data_Image);
    u8g2->sendBuffer();
    delay(1000);

    u8g2->setFont(u8g2_font_haxrcorp4089_t_cyrillic);
    u8g2->setDisplayRotation(U8G2_R2);
    //u8g2->drawStr(10, 125, fbat);


  }  
  delay(200);
  u8g2->clearBuffer();
}



void displayMsg(char* msg)
{
  u8g2->setDrawColor(1);
  u8g2->drawBox(0+65, 60-60, 64, 13);
  u8g2->setDrawColor(0);
  u8g2->drawStr(0+65, 70-60, msg);
  u8g2->sendBuffer();
  u8g2->setDrawColor(1);
}

void displayMsgS(String msg)
{
  char chars[msg.length()+1];
  msg.toCharArray(chars,msg.length()+1);
  u8g2->setDrawColor(1);
  u8g2->drawBox(0+65, 60-60, 64, 13);
  u8g2->setDrawColor(0);
  u8g2->drawStr(0+65, 70-60, chars);
  u8g2->sendBuffer();
  u8g2->setDrawColor(1);
}

void displayMsgS1(String msg)
{
  char chars[msg.length()+1];
  msg.toCharArray(chars,msg.length()+1);
  u8g2->setDrawColor(1);
  u8g2->drawBox(0+65, 70-60, 64, 13);
  u8g2->setDrawColor(0);
  u8g2->drawStr(0+65, 80-60, chars);
  u8g2->sendBuffer();
  u8g2->setDrawColor(1);
}

void displayBat(uint8_t msg)
{
  float battery=(float)msg/10;
  char fbat[6];
  sprintf(fbat, "%.1f", battery);
  
  
  u8g2->setDrawColor(0);
  u8g2->drawBox(0, 115-62, 32, 13);
  u8g2->setDrawColor(1);
  u8g2->drawXBM( 0, 115-62, bat_width, bat_height, image_batt);
  u8g2->drawStr(10, 125-62, fbat);
  u8g2->sendBuffer();
  u8g2->setDrawColor(1);
}

void displayTemp(char* msg)
{
  u8g2->setDrawColor(0);
  u8g2->drawBox(0, 103-62, 64, 13);
  u8g2->setDrawColor(1);
  u8g2->drawXBM( 0, 103-62, bat_width, bat_height, image_temp);
  u8g2->drawStr(10, 113-62, msg);
  u8g2->sendBuffer();
  u8g2->setDrawColor(1);
}


void displayX()
{  
  u8g2->setDrawColor(0);
  u8g2->drawBox(0, 90, 15, 13);
  u8g2->setDrawColor(1);  
  u8g2->drawStr(0, 100, "X");
  u8g2->sendBuffer();
  delay(30);
  u8g2->setDrawColor(0);
  u8g2->drawBox(0, 90, 15, 13);
  u8g2->sendBuffer();
  u8g2->setDrawColor(1);
}

void displayStatus(char *msg)
{
  u8g2->setDrawColor(0);
  u8g2->drawBox(35, 115-62, 64, 13);
  u8g2->setDrawColor(1);
  u8g2->drawStr(35, 125-62, msg);
  u8g2->sendBuffer();
  u8g2->setDrawColor(1);
}


void displayValue(SimpleMenu *_menu)
{

  //u8g2->clearBuffer();
  u8g2->setDrawColor(1);
  u8g2->drawBox(0, 0, 64, 13);

  char buf[256];
  snprintf(buf, sizeof(buf), "%i", _menu->getUValue());
  u8g2->setDrawColor(0);
  u8g2->drawStr(0, 10, buf);
  u8g2->sendBuffer();
  u8g2->setDrawColor(1);

}




